:css
  .ui-button 
  {
    cursor: pointer;
    display: inline-block;
    background-color: #e6e6e6;
    background-repeat: no-repeat;
    background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#fff), color-stop(25%, #fff), to(#e6e6e6));
    background-image: -webkit-linear-gradient(#fff, #fff 25%, #e6e6e6);
    background-image: -moz-linear-gradient(top, #fff, #fff 25%, #e6e6e6);
    background-image: -ms-linear-gradient(#fff, #fff 25%, #e6e6e6);
    background-image: -o-linear-gradient(#fff, #fff 25%, #e6e6e6);
    background-image: linear-gradient(#fff, #fff 25%, #e6e6e6);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff', endColorstr='#e6e6e6', GradientType=0);
    padding: 16px 16px 16px;
    margin: 0;
    text-shadow: 0 1px 1px rgba(255,255,255,0.75);
    color: #333;
    font-size: 13px;
    line-height: normal;
    border: 1px solid #ccc;
    border-bottom-color: #bbb;
    -webkit-box-shadow: inset 0 1px 0 rgba(255,255,255,0.2),0 1px 2px rgba(0,0,0,0.05);
    -moz-box-shadow: inset 0 1px 0 rgba(255,255,255,0.2),0 1px 2px rgba(0,0,0,0.05);
    box-shadow: inset 0 1px 0 rgba(255,255,255,0.2),0 1px 2px rgba(0,0,0,0.05);
    -webkit-transition: 0.1s linear background-image;
    -moz-transition: 0.1s linear background-image;
    -ms-transition: 0.1s linear background-image;
    -o-transition: 0.1s linear background-image;
     transition: 0.1s linear background-image;
     overflow: visible;
    }
    .ui-state-hover
    {
      background-position: 0 0px;
      background-color: #333;
      text-decoration: none;
    }
		
        .bold_button
        {
            background-image: url('/assets/Farm-Fresh_text_bold.png');
        }
        .italic_button
        {
            background-image: url(/assets/Farm-Fresh_text_italic.png);
        }
        .justifyLeft_button
        {
            background-image: url(/assets/Farm-Fresh_text_align_left.png);
        }
        .justifyRight_button
        {
            background-image: url(/assets/Farm-Fresh_text_align_right.png);
        }
        .justifyCenter_button
        {
            background-image: url(/assets/Farm-Fresh_text_align_center.png);
        }
        .insertOrderedList_button
        {
            background-image: url(/assets/TTC_line_one.png);
        }
        .insertUnorderedList_button
        {
            background-image: url(/assets/Map-icon-circle-black.png);
        }

#submit_form
  = nested_form_for @submission do |f|
    - if @submission.errors.any?
      #error_explanation
        %h2= "#{pluralize(@submission.errors.count, "error")} prohibited this submission from being saved:"
        %ul
          - @submission.errors.full_messages.each do |msg|
            %li= msg
            
    #top
      #headline_byline
        .field= f.text_field :headline, :placeholder => "Headline"
        .field= byline_or_writer_field f, @submission
      #notes_field= f.text_area :notes, :cols => "40", :rows => "5", :placeholder => "Notes"

    #metadata_fields
      %div.clear
        = f.label "Writer: "
        = f.collection_select(:writer_id, Writer.order("name ASC"), :id, :name, :prompt => true)
      %div.clear
        = f.label "Issue: "
        = f.collection_select(:issue_id, Issue.order("volume DESC, issue DESC"), :id, :short_string)
      = f.label "Websclusive: "
      = f.check_box :websclusive
      = f.label "Approved: "
      = f.check_box :approved
      = f.label "Copyedited: "
      = f.check_box :copyedited
      = f.label "Edited: "
      = f.check_box :edited
      = f.label "Published: "
      = f.check_box :published
    
    = f.hidden_field :body
    = f.hidden_field :clean_body
    = f.hidden_field :assignment_id

    %div{:id => 'editor' }
      %div{:id => 'submission_body_editable_wrapper'}
        %div{:id => 'submission_body_editable', :class => 'editable'}
          %p
    
    = image_tag(@submission.image.file_url(:primary)) if @submission.image.file.present?
    = f.fields_for :image do |image_form|
      = image_form.text_field :description, :placeholder => "Description"
      = image_form.file_field :file
      = image_form.text_field :credit, :placeholder => "Credit"
      = image_form.collection_select(:writer_id, Writer.all, :id, :name, :prompt => true)
      = image_form.label :remove_file
      = image_form.check_box :remove_file
    
    .actions
      = f.submit 'Save', :id => "submission_save"
      
    %ul#ice_actions
      %li
        %a{:id => "toggle_changes"} Show/Hide Changes
      %li
        %a{:id => "accept_all"} Accept all changes
      %li
        %a{:id => "reject_all"} Reject all changes
      %li
        %a{:id => "accept_change"} Accept change
      %li
        %a{:id => "reject_change"} Reject change


  :javascript
    $(function() {
        var text = document.getElementById('submission_body_editable');
        window.tracker = new ice.InlineChangeEditor({
            element: text,
            handleEvents: true,
            plugins : ['IceAddTitlePlugin', 'IceSmartQuotesPlugin', 'IceEmdashPlugin', {
                name : 'IceCopyPastePlugin',
                settings : {
                    pasteType : 'formattedClean',
                    preserve : 'p,a[href],i,em,b,strong,span[id,class],h1,h2,h3,h4,h5,h6,ul,ol,li'
                }
            }]
        }).startTracking();
    });
    jQuery(document).ready(function() {
      tracker.setCurrentUser({
        id: "#{current_editor.id}",
        name: "#{current_editor.name}"
      });
      jQuery("#accept_all").mousedown(function() {
        return tracker.acceptAll();
      });
      jQuery("#reject_all").mousedown(function() {
        return tracker.rejectAll();
      });
      jQuery("#accept_change").mousedown(function() {
        return tracker.acceptChange();
      });
      jQuery("#reject_change").mousedown(function() {
        return tracker.rejectChange();
      });
    });